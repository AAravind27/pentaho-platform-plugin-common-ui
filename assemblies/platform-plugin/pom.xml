<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>pentaho-common-ui-assemblies</artifactId>
    <version>7.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <groupId>pentaho</groupId>
  <artifactId>common-ui</artifactId>
  <packaging>pom</packaging>

  <properties>
    <prepared.assembly.name>extrated-resources</prepared.assembly.name>

    <prepared.assembly.directory>${project.build.directory}/${prepared.assembly.name}</prepared.assembly.directory>
    <webjars.target.directory>${prepared.assembly.directory}/webjars/META-INF/resources/webjars</webjars.target.directory>
    <common-ui-impl-client.directory>${prepared.assembly.directory}/common-ui-impl-client</common-ui-impl-client.directory>

    <js.assembly.name>${project.artifactId}-${project.version}-js</js.assembly.name>
    <js.assembly.directory>${project.build.directory}/${js.assembly.name}</js.assembly.directory>

    <prepared-folder.name>extrated-resources</prepared-folder.name>

    <flexjson.version>2.1</flexjson.version>

    <jquery-i18n-properties.version>1.0.9</jquery-i18n-properties.version>
    <handlebars.version>4.0.5</handlebars.version>
    <angular.version>1.5.8</angular.version>
    <angular-translate.version>2.2.0-canary-pentaho-modified</angular-translate.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-platform-plugin-common-ui-impl-server</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-platform-plugin-common-ui-impl-server</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
    </dependency>

    <dependency>
      <groupId>net.sf.flexjson</groupId>
      <artifactId>flexjson</artifactId>
      <version>${flexjson.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-modeler</artifactId>
      <version>${pentaho-modeler.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-platform-plugin-common-ui-impl-gwt</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-platform-plugin-common-ui-impl-client</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>jquery</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>handlebars</artifactId>
      <version>${handlebars.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.webjars.bower</groupId>
      <artifactId>jquery-i18n-properties</artifactId>
      <version>${jquery-i18n-properties.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-animate</artifactId>
      <version>${angular.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-aria</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-cookies</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-loader</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-message-format</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-messages</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-parse-ext</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-resource</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-route</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-sanitize</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-scenario</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-touch</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>angular-i18n</artifactId>
      <version>${angular.version}</version>
    </dependency>
    <dependency>
      <groupId>angular-translate</groupId>
      <artifactId>angular-translate</artifactId>
      <version>${angular-translate.version}</version>
    </dependency>
    <dependency>
      <groupId>org.webjars.bower</groupId>
      <artifactId>dojo</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars.bower</groupId>
      <artifactId>dijit</artifactId>
    </dependency>
    <!-- dojox -->
    <dependency>
      <groupId>org.dojotoolkit.dojo</groupId>
      <artifactId>dojo-release</artifactId>
      <classifier>src</classifier>
      <type>zip</type>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly-plugin.version}</version>

        <executions>

          <!-- First unpack all webjar dependencies locally so that we can pick what to copy and where to copy it for the final assembly -->
          <execution>
            <id>unpack-webjars-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/prepareAssembly.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>${prepared.assembly.name}</finalName>
            </configuration>
          </execution>

          <!-- Second, create the platform plugin js zip artifact -->
          <execution>
            <id>bundle-common-ui-platform-plugin-js</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/assembly-js.xml</descriptor>
              </descriptors>

              <appendAssemblyId>true</appendAssemblyId>
              <classifier>js</classifier>
            </configuration>
          </execution>

          <!-- Last, create the platform plugin zip artifact -->
          <execution>
            <id>bundle-common-ui-platform-plugin</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/assembly.xml</descriptor>
              </descriptors>

              <appendAssemblyId>false</appendAssemblyId>
              <classifier>zip</classifier>
            </configuration>
          </execution>

          <!-- And also... Copy the java sources -->
          <execution>
            <id>bundle-common-ui-platform-plugin-sources</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/assembly-sources.xml</descriptor>
              </descriptors>

              <appendAssemblyId>true</appendAssemblyId>
              <classifier>sources</classifier>
            </configuration>
          </execution>

        </executions>

      </plugin>

    </plugins>
  </build>

</project>
